package org.springframework.samples.dreamgp.autoGeneratedAssertions;

import org.assertj.core.util.Objects;
import org.springframework.samples.dreamgp.model.Authorities;

/**
 * Abstract base class for {@link Authorities} specific assertions - Generated by CustomAssertionGenerator.
 */
@javax.annotation.Generated(value="assertj-assertions-generator")
public abstract class AbstractAuthoritiesAssert<S extends AbstractAuthoritiesAssert<S, A>, A extends Authorities> extends AbstractBaseEntityAssert<S, A> {

  /**
   * Creates a new <code>{@link AbstractAuthoritiesAssert}</code> to make assertions on actual Authorities.
   * @param actual the Authorities we want to make assertions on.
   */
  protected AbstractAuthoritiesAssert(A actual, Class<S> selfType) {
    super(actual, selfType);
  }

  /**
   * Verifies that the actual Authorities's authority is equal to the given one.
   * @param authority the given authority to compare the actual Authorities's authority to.
   * @return this assertion object.
   * @throws AssertionError - if the actual Authorities's authority is not equal to the given one.
   */
  public S hasAuthority(String authority) {
    // check that actual Authorities we want to make assertions on is not null.
    isNotNull();

    // overrides the default error message with a more explicit one
    String assertjErrorMessage = "\nExpecting authority of:\n  <%s>\nto be:\n  <%s>\nbut was:\n  <%s>";

    // null safe check
    String actualAuthority = actual.getAuthority();
    if (!Objects.areEqual(actualAuthority, authority)) {
      failWithMessage(assertjErrorMessage, actual, authority, actualAuthority);
    }

    // return the current assertion for method chaining
    return myself;
  }

  /**
   * Verifies that the actual Authorities's user is equal to the given one.
   * @param user the given user to compare the actual Authorities's user to.
   * @return this assertion object.
   * @throws AssertionError - if the actual Authorities's user is not equal to the given one.
   */
  public S hasUser(org.springframework.samples.dreamgp.model.User user) {
    // check that actual Authorities we want to make assertions on is not null.
    isNotNull();

    // overrides the default error message with a more explicit one
    String assertjErrorMessage = "\nExpecting user of:\n  <%s>\nto be:\n  <%s>\nbut was:\n  <%s>";

    // null safe check
    org.springframework.samples.dreamgp.model.User actualUser = actual.getUser();
    if (!Objects.areEqual(actualUser, user)) {
      failWithMessage(assertjErrorMessage, actual, user, actualUser);
    }

    // return the current assertion for method chaining
    return myself;
  }

}
