package org.springframework.samples.petclinic.customAssertions;

import org.springframework.samples.petclinic.model.GranPremio;

/**
 * {@link GranPremio} specific assertions - Generated by CustomAssertionGenerator.
 *
 * Although this class is not final to allow Soft assertions proxy, if you wish to extend it, 
 * extend {@link AbstractGranPremioAssert} instead.
 */
@javax.annotation.Generated(value="assertj-assertions-generator")
public class GranPremioAssert extends AbstractGranPremioAssert<GranPremioAssert, GranPremio> {

  /**
   * Creates a new <code>{@link GranPremioAssert}</code> to make assertions on actual GranPremio.
   * @param actual the GranPremio we want to make assertions on.
   */
  public GranPremioAssert(GranPremio actual) {
    super(actual, GranPremioAssert.class);
  }

  /**
   * An entry point for GranPremioAssert to follow AssertJ standard <code>assertThat()</code> statements.<br>
   * With a static import, one can write directly: <code>assertThat(myGranPremio)</code> and get specific assertion with code completion.
   * @param actual the GranPremio we want to make assertions on.
   * @return a new <code>{@link GranPremioAssert}</code>
   */
  @org.assertj.core.util.CheckReturnValue
  public static GranPremioAssert assertThat(GranPremio actual) {
    return new GranPremioAssert(actual);
  }
}
